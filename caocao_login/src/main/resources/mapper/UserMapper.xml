<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.caocaorbac.mapper.UserMapper">


    <resultMap id="UserResultMap" type="com.caocaorbac.pojo.User">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="tenant_id" jdbcType="VARCHAR" property="tenant_id"/>
        <result column="department_id" jdbcType="INTEGER" property="department_id"/>
        <result column="user_name" jdbcType="VARCHAR" property="user_name"/>
        <result column="pwd" jdbcType="VARCHAR" property="pwd"/>
        <result column="user_code" jdbcType="VARCHAR" property="user_code"/>
        <result column="user_email" jdbcType="VARCHAR" property="user_email"/>

        <collection column="user_code" property="roles" select="com.caocaorbac.mapper.RoleMapper.getRoleByUserID"
                    ofType="com.caocaorbac.pojo.Role">
        </collection>
    </resultMap>


    <!-- get all user Info -->
    <select id="getAllUeserInfo" resultType="java.util.Map">
        select id, tenant_id, department_id, user_name,user_code,user_email
        from User
    </select>

    <!-- get user by login, user user_name and pwd as input param -->
    <select id="login" resultMap="UserResultMap">
        select * from User
        where user_name = #{username} and pwd = #{pwd}
    </select>

    <!-- add new User -->
    <insert id="addUser" parameterType="User">
        insert into User
            (tenant_id,
             department_id,
             user_name,
             pwd,
             user_code,
             user_email)
        values(
               #{tenant_id},=
               #{department_id},
               #{user_name},
               #{pwd},
               #{user_code},
               #{user_email});
    </insert>

    <!-- batch add new User -->


    <!-- delete User -->
    <update id="deleteUser"  parameterType="String" >
        update User
        set is_delete = 1
        where user_code = #{user_code};
    </update>

    <!-- update User info -->
    <update id="updateUserInfo" parameterType="User">
        update User
        <trim prefix="set" suffixOverrides=",">
            <if test="department_id != null">department_id=#{department_id,jdbcType=NUMERIC},</if>
            <if test="user_name != null">user_name=#{user_name,jdbcType=VARCHAR},</if>
            <if test="pwd != null">pwd=#{pwd,jdbcType=VARCHAR},</if>
            <if test="user_email != null">user_email=#{user_email,jdbcType=VARCHAR},</if>
        </trim>
            where user_code=#{user_code,jdbcType=VARCHAR}
    </update>


<!--    &lt;!&ndash; get role by user id&ndash;&gt;-->
<!--    <select id="getRoleByUser" resultMap="UserResultMap">-->
<!--        select u.*,-->
<!--               r.id as role_id,-->
<!--               r.name as role_name-->
<!--        from User u-->
<!--                left join User_Role ur on u.id = ur.user_id-->
<!--                left join Role r on r.id = ur.role_id-->
<!--        where u.id = #{id}-->
<!--    </select>-->





</mapper>